buildscript {

    ext { springBootVersion = '2.0.6.RELEASE' }

    dependencies {
        repositories {
            jcenter()
            mavenCentral()
            maven { url "https://repo.spring.io/plugins-release" }
            maven { url "https://plugins.gradle.org/m2" }
        }
        classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '4.+')

        classpath(group: 'net.ltgt.gradle', name: 'gradle-apt-plugin', version: '0.19')

        classpath (group:  'org.springframework.boot', name: 'spring-boot-gradle-plugin', version: "${springBootVersion}")

        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.6'

    }
}


apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'net.ltgt.apt'
apply plugin: 'net.ltgt.apt-idea'
apply plugin: 'net.ltgt.apt-eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.gonuclei'
version = '1.0.0-snapshot'

apply plugin: 'checkstyle'

tasks.withType(Checkstyle) {
    showViolations true
    exclude '**/grpc/**'
}
checkstyle {
    toolVersion '8.11'
    sourceSets = [project.sourceSets.main]
}
// Fails gradle build when checkstyle violation occurs
tasks.withType(Checkstyle).each { checkstyleTask ->
    checkstyleTask.doLast {
        reports.all { report ->
            def outputFile = report.destination
            if (outputFile.exists() && outputFile.text.contains("<error ")) {
                throw new GradleException("There were checkstyle warnings! For more info check $outputFile")
            }
        }
    }
}

apply plugin: 'pmd'

pmd {
    toolVersion = '6.11.0'
    ruleSets = []
    ruleSetFiles = files("$rootDir/config/pmd/ruleset.xml")
}

apply plugin: 'jacoco'

jacoco{
    toolVersion = "0.8.2"
}
test.finalizedBy jacocoTestReport

jacocoTestReport {
    reports {
        html {
            enabled true
        }
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: [
                            '**/gonuclei/grpc/**',
                            '**/gonuclei/config/redis/**',
                    ])
        })
    }
}


apply plugin: 'com.google.protobuf'

ext {
    protobufVersion = "3.6.1"
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
        //  generatedFilesBaseDir = "$projectDir/src"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.16.1'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}
// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}








sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
    jcenter()
    mavenCentral()
    maven { url 'http://172.16.0.32:9090/artifactory/libs-snapshot-local' }
    maven { url 'http://172.16.0.32:9090/artifactory/nuclei-release-repo' }
}


repositories {
    jcenter()
    mavenCentral()
    maven { url 'http://172.16.0.32:9090/artifactory/libs-snapshot-local' }
    maven { url 'http://172.16.0.32:9090/artifactory/nuclei-release-repo' }
}

dependencies{

    implementation('org.springframework.boot:spring-boot-starter')

    testImplementation('org.springframework.boot:spring-boot-starter-test')


    implementation('com.bizdirect:bizdirect-spring-boot-starter-data:2.0.8-SNAPSHOT')


    implementation('com.bizdirect:bizdirect-spring-boot-starter-kafka:2.0.8-SNAPSHOT')


    implementation('com.bizdirect:bizdirect-spring-boot-starter-rest-client:2.0.7-SNAPSHOT')


    implementation('com.bizdirect:bizdirect-spring-boot-starter-security:2.0.8-SNAPSHOT')


    implementation('org.springframework.boot:spring-boot-starter-web:')


    implementation('org.springframework.boot:spring-boot-starter-data-redis:')


    implementation('redis.clients:jedis:')


    implementation('org.springframework.vault:spring-vault-core:2.1.1.RELEASE')


    implementation('com.google.protobuf:protobuf-java:3.6.1')


    implementation('com.google.protobuf:protobuf-java-util:3.6.1')


    implementation('com.googlecode.protobuf-java-format:protobuf-java-format:1.4')


    implementation('io.grpc:grpc-netty-shaded:1.16.1')


    implementation('io.grpc:grpc-protobuf:1.16.1')


    implementation('io.grpc:grpc-stub:1.16.1')


    implementation('io.github.lognet:grpc-spring-boot-starter:3.0.0')


    implementation('org.javassist:javassist:3.24.0-GA')


    implementation('javax.xml.bind:jaxb-api:2.3.1')


    implementation('javax.validation:validation-api:2.0.0.Final')


    testImplementation('org.mockito:mockito-core:1.9.5')


    testImplementation('junit:junit:4.12')


    implementation('org.mapstruct:mapstruct-jdk8:1.2.0.Final')


    implementation('org.mapstruct:mapstruct-processor:1.2.0.Final')

}




bootJar {
    enabled = true
}

jar {
    enabled = false
}

