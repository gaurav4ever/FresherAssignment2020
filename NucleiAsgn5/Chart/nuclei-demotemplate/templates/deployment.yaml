apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  labels:
    app: {{ .Values.name }}
    version: {{ .Values.version }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.name }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        version: {{ .Values.version }}
    spec:
      serviceAccount: {{ .Values.vault.sa }}
      initContainers:
        - name: {{ .Values.init.name }}
          image: "{{ .Values.init.vaultInitRepository }}:{{ .Values.init.vaultInitTag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ .Values.VaultConfigMap }}
          env:
            - name: SERVICE
              value: {{ .Values.vault.name }}
          volumeMounts:
            - name: {{ .Values.vault.creds }}
              mountPath: {{ .Values.vault.creds_path }}
            - name: {{ .Values.vault.token }}
              mountPath: {{ .Values.vault.token_path }}
      containers:
      - name: {{ .Values.name }}
        image: "{{ .Values.image.repository}}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        volumeMounts:
          - name: {{ .Values.vault.creds }}
            mountPath: {{ .Values.vault.creds_path }}
        envFrom:
        - configMapRef:
            name: {{ .Values.CommonConfigMap }}
        {{- if .Values.appConfigMap.enabled }}
        - configMapRef:
            name: {{ .Values.appConfigMap.name}}
        {{- end }}
        ports:
        {{- if .Values.grpc.enabled }}
        - containerPort: {{ .Values.grpc.targetPort }}
          name: {{ .Values.grpc.name }}
        {{- end }}
        {{- if .Values.rest.enabled }}
        - containerPort: {{ .Values.rest.targetPort }}
          name: {{ .Values.rest.name }}
        {{- end }}
        livenessProbe:
          {{- if .Values.grpc.enabled }}
          exec:
            command: ["/bin/grpc_health_probe", "-addr=127.0.0.1:{{ .Values.grpc.targetPort }}" , "-connect-timeout=250ms", "-rpc-timeout=1000ms", "-service={{ .Values.protoServiceName }}"]
          {{- else }}
          httpGet:
            path: {{ .Values.probePath }}
            port: {{ .Values.service.internalPort }}
          {{- end }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
        readinessProbe:
          {{- if .Values.grpc.enabled }}
          exec:
            command: ["/bin/grpc_health_probe", "-addr=127.0.0.1:{{ .Values.grpc.targetPort }}" , "-connect-timeout=250ms", "-rpc-timeout=1000ms", "-service={{ .Values.protoServiceName }}"]
          {{- else }}
          httpGet:
            path: {{ .Values.probePath }}
            port: {{ .Values.service.internalPort }}
          {{ end }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
        - name: {{ .Values.vault.creds }}
          emptyDir: {}
        - name: {{ .Values.vault.token }}
          emptyDir: {}